{
    "mcq":{
        "prompt":"Here is the context for the multiple-choice questions: {CONTEXT}. I need you to generate exactly {TIMES} multiple-choice questions with 4 options each. {MODE} The output must strictly be in raw JSON format without any extra text. Each question should follow this exact structure: question:question_string,options:List[],correct_answer:answer,hint:short_hint_string"
    },
    "match":{
<<<<<<< HEAD
        "prompt":"Here is the context for the matching questions {CONTEXT}. Kindly prepare {TIMES} matching questions. I want the output format in the form of a nested list where each sub-arrays are matching pairs. ie [[option1,option2],[option3,option4]], Kindly send me the just the output. Send me the output in the form of json, Note that all the pairs must be unique in nature"
=======
        "prompt":"Here is the context for the matching questions: {CONTEXT}. Please generate exactly {TIMES} matching questions. {MODE} The output must strictly be in the form of a raw JSON array where each sub-array contains a pair of matching items. Each matching pair should be represented like this: item1,match"
    },
    "sequence": {
        "Prompt": "Here is the context: {CONTEXT}. {MODE} Based on this, I need you to determine whether the information is best represented as a process or a classification. {MODE} If it's a process, return a JSON array where each element represents a step in the process, maintaining the correct sequence. Each step should be formatted like this: step_number: integer, description: string. If it's a classification, return a JSON object in the form of a tree map, where each step can have multiple children. Format each node with its classification label and possible sub-classifications like this: label: string, children: [ { label: string, children: [...] }, ... ]. Please analyze the context and return the appropriate JSON format. Ensure there are no additional explanations or formattingâ€”only the JSON object."
    },
    "connections": {
        "Prompt": "Here is the context: {CONTEXT}. {MODE} I need you to create a connections game based on this context. Generate a 3x3 grid of 9 important keywords from the context. Group the keywords into 3 categories, with exactly 3 words per category. The challenge for the user will be to figure out which words belong to which category. Return the output in the following structure: A list of 9 keywords in random order (for the grid). A list of the 3 categories, with the 3 correct words for each category."
    },
    "song":{
        "prompt":"This is a song writing task. I want you to write a song on this content. The song should contain all the technical details and should emphasize the main points. Make sure to use rhyming words and make it catchy."
    },
    "mode": {
        "easy": "Generate simple, basic concepts or topics that test fundamental understanding of the content.",
        "medium":"Generate moderately challenging concepts or topics that require some reasoning or deeper understanding.",
        "hard":"Generate advanced and hard concepts or topics that require a deep understanding of the subject."
        "prompt":"Here is the context for the matching questions {CONTEXT}. Kindly prepare {TIMES} matching questions. I want the output format in the form of a nested list where each sub-arrays are matching pairs. ie [[option1,option2],[option3,option4]], Kindly send me the just the output. Send me the output in the form of json"
>>>>>>> c409ed0f5867d9615e93d9af3cd62188f217f28d
    },
    "song":{
        "prompt":"This is a song writing task. I want you to write a lyrics for a song on this content {CONTEXT}. The song should contain all the technical details and should emphasize the main points. Make sure to use rhyming words and make it catchy and I just need the lyrics (max 10-20 lines)"
    },
    "connection":{
        "prompt":"I would like you to generate a an array of json for this context: {CONTEXT}. Kindly prepare {TIMES} entries. The output should be in the form of a JSON . Below is an example format for the JSON output that is expected:Each json should have the keys id, category and label. The id denotes the keyword's id, category denotes which superset does the keyword belong to and the label is the name of the keyword provide me just the json no need of any other additional details. Make sure that you have atleast one or more json for one category. There must be only 3 categories please remember"
    }
}